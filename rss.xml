<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Matt Copperwaite</title><link>https://matt.copperwaite.net/</link><description>Recent content on Matt Copperwaite</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><managingEditor>matt@copperwaite.net (Matt Copperwaite)</managingEditor><webMaster>matt@copperwaite.net (Matt Copperwaite)</webMaster><copyright>CC BY-SA 4.0</copyright><atom:link href="https://matt.copperwaite.net/rss.xml" rel="self" type="application/rss+xml"/><item><title>Experiments in Stateless Terraform</title><link>https://matt.copperwaite.net/blog/experiments-in-stateless-terraform/</link><pubDate>Tue, 31 May 2022 18:10:32 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/experiments-in-stateless-terraform/</guid><description>&lt;p>&lt;a href="https://www.bejarano.io/terraform-stateless/">This article about the history of statefulness in Terraform&lt;/a> really resonated with me. Over the last few months I have been playing with setting up Terraform in such a way that the state file was no-longer required.&lt;/p>
&lt;p>This post is about sharing my observations from those experiments because what I found instead was that with the current way AWS works, while it is possible to use Terraform without state, there are some limitations with AWS that made this more difficult than you would expect.&lt;/p>
&lt;p>The key issue you encounter when you no-longer know the state of your infrastructure is identifying which resources are no-longer needed. You either need to enumerate them, or to discard them without being aware that they exist. The first solution I tried was to use the AWS Account as an ephemeral container for everything that is built and destroyed. This guarantees to find everything and is reasonably quick to achieve.&lt;/p>
&lt;p>I do recognise that what I&amp;rsquo;m attempting to do is a hack, Terraform and AWS are not designed to be used this way. Terraform has not made their decision to use state in isolation, they will have encountered the problems I further on in this article and the solution they went for was adding complexity through state. I don&amp;rsquo;t see that as unreasonable, they made those decisions based upon the limitations of AWS at the time, and AWS made their own decisions based on assumptions about how their infrastructure was intended to be used.&lt;/p>
&lt;h2 id="becoming-stateless">Becoming stateless&lt;/h2>
&lt;p>The concept is that everything you need is first built in to one AWS Account and when you want to release a new instance, re-create everything in a second AWS Account and fail over to it. The first AWS Account can then be removed. A separate AWS Account with a load balancer can then perform the switching when the new infrastructure is up and running. This is a form of &lt;a href="https://www.redhat.com/en/topics/devops/what-is-blue-green-deployment">Green/Blue Deployment&lt;/a>.&lt;/p>
&lt;h2 id="member_account_payment_instrument_required">MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED&lt;/h2>
&lt;p>There are a some limitations with this, and this is where I think it gets interesting.&lt;/p>
&lt;p>My first thought to clearing out the old resources is to delete the AWS Account. However, the deletion of AWS Accounts from an AWS Organization requires the sub-account to have credit card details associated to the Account. That makes it a manual step. A manual step means no automated Green/Blue deployment.&lt;/p>
&lt;!--alex ignore black hole-->
&lt;p>There is an alternative. I call it the &amp;ldquo;black hole&amp;rdquo;. This is an OU in your AWS Organization that has a policy on it that prevents all roles from being assumed in that Account. That way your resources cannot run and your cost will reach zero.&lt;/p>
&lt;p>This then runs in to another issue. There are soft limits on the number of sub-Accounts that an AWS Organization can have. By default 10. When you&amp;rsquo;re doing continuous deployments, you do the math on the number of Accounts you will need per day. It &lt;em>is&lt;/em> a &lt;em>soft&lt;/em> limit, so you can ask Amazon nicely for it to be increased, but I bet in a short amount of time you will have an unhappy Amazon asking you what you are up to and can you please stop.&lt;/p>
&lt;h2 id="better-solutions">Better Solutions&lt;/h2>
&lt;p>The only other way of doing this is to follow the enumeration path. Fortunately tooling such as &lt;a href="https://github.com/gruntwork-io/cloud-nuke">cloud-nuke&lt;/a> exist to empty an AWS Account of resources. You can even be selective about allow-listing certain resources, but it is a very slow process and it &lt;a href="https://github.com/gruntwork-io/cloud-nuke/issues/281">may not cover everything&lt;/a>.&lt;/p>
&lt;p>However, the interesting part here was finding the limits of what was possible in AWS. Not something I encounter often. I don&amp;rsquo;t have a lot of experience in other PaaS services so I would love to hear if doing this is possible in Azure or GCP.&lt;/p>
&lt;p>I do wonder if its something Amazon will fix, but I also think it is a fundamental limitation in how AWS assumed Accounts would be used. Otherwise they would have no doubt made it easier.&lt;/p>
&lt;p>A different, but unattainable solution I&amp;rsquo;ve started to see with services like &lt;a href="https://docs.fastly.com/en/guides/working-with-services#editing-and-activating-versions-of-services">Fastly&lt;/a> and &lt;a href="https://docs.doppler.com/docs/versioning">Doppler&lt;/a> is that they have configuration versioning built right in to their web UI.&lt;/p>
&lt;p>I am hopeful that this is a tend towards a &lt;a href="https://www.lastweekinaws.com/blog/clickops/">ClickOps model&lt;/a> which has the ability to make Infrastructure as Code, and therefore managing state, redundant. The first PaaS services to do infrastructure versioning this way is going to get a lot of attention to me. However, I don&amp;rsquo;t see this happening in AWS for a long time.&lt;/p></description></item><item><title>What does the future look like</title><link>https://matt.copperwaite.net/blog/predicting-the-future/</link><pubDate>Thu, 14 Apr 2022 18:12:32 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/predicting-the-future/</guid><description>&lt;p>I remember back in the late 90s and early 2000s there was a portion of the population that were fascinated by the culture of Japan. One aspect of that, that captured people&amp;rsquo;s imagination is how we used to find it so odd that at &amp;ldquo;celebrities&amp;rdquo; like &lt;a href="https://youtu.be/_EnFSwVV-c4">Sylvester Stallone&lt;/a> and &lt;a href="https://youtu.be/6s8qn_PKbiA">Arnold Schwarzenegger&lt;/a> were doing adverts for strange products in languages other than their own. This became such a part of our own culture that it was even &lt;a href="https://youtu.be/uOy2lrJqKGY">parodied in the TV series Friends&lt;/a>.&lt;/p>
&lt;p>These days we&amp;rsquo;re not even shocked when &amp;ldquo;celebrities&amp;rdquo; like &lt;a href="https://youtu.be/IeQhtFS8KU0?t=14">George Clooney endorsing coffee&lt;/a>, or &lt;a href="https://youtu.be/uFPEedHvHqs">Snoop Dogg rapping about take-away apps&lt;/a>.&lt;/p>
&lt;p>Being a fan of Sci-Fi I&amp;rsquo;m fascinated by the idea of what we would make of technology from the future. If a smart phone from 2050 landed in your hand, how would you interpret it? Or use it? Would it even be recognisable? We can&amp;rsquo;t know what it would look like, but I think we can predict our feelings towards it.&lt;/p>
&lt;!--alex ignore simple-->
&lt;p>This past week I listened to a &lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5tZWdhcGhvbmUuZm0vY2F1dGlvbmFyeXRhbGVz/episode/YjZmYjI1MzAtYWY1NS0xMWVjLWEyYTgtMmYwODg4M2JjMDJl?sa=X&amp;amp;ved=0CAUQkfYCahcKEwiI163Mw4T3AhUAAAAAHQAAAAAQAQ">Cautionary Tales episode about the Sinclair C5&lt;/a> in which they dramatised the launch of the C5, a &amp;ldquo;revolutionary&amp;rdquo; electric vehicle. Among its many failings, such as being incapable of coping with the weather of the country in which it was launched, it was also simply &amp;ldquo;weird&amp;rdquo;.&lt;/p>
&lt;p>The C5 was unlike everything anyone had seen before. Even now, in a world with &lt;a href="https://ridedott.com/ride-with-us/london">eScooters&lt;/a> and &lt;a href="https://www.amazon.co.uk/FLYING-ANT-Hoverboard-Balancing-Certified-Green-bluetooth/dp/B08GFQ5FVS">hoverboards&lt;/a>, the C5 looks like a strange device &amp;ndash; although that could be to do with the 80s styling.&lt;/p>
&lt;p>I think this can tell us something about those who are yet to be exposed to practices such as ZeroTrust and DevOps practices, or those that have been exposed and are resistant to it. There is no doubt those ways of working are here and likely to stay, and may well be superseded. But some people view modern engineering techniques as this odd, alien, concept that upsets everything that has gone before it. Those people are like us, viewing the culture of Japan through a lens of &amp;ldquo;well this is weird&amp;rdquo;.&lt;/p>
&lt;p>Through my own experience of learning and practising Agile techniques, I found it&amp;rsquo;s a total mind-shift from the traditional way of working. It turns up-side-down so much of what we&amp;rsquo;re taught by companies, society, and universities.&lt;/p>
&lt;p>It also challenges many things outside an engineering team, things that are usually deemed sacred, like finance and procurement. Making it so that even if your engineering team does adopt it, it&amp;rsquo;s full effect cannot be achieved without a holistic cultural shift in your organisation.&lt;/p>
&lt;p>Remembering those early days is important, to remember how you felt, how you got to a stage where you were comfortable, and to use those &amp;ldquo;aha!&amp;rdquo; moments to bring others on the journey with you.&lt;/p>
&lt;p>I hope to write about the best way I find to achieve adoption soon. Implementing Agile methodologies across an organisation certainly is a slow process and potentially generational in nature, and it cannot be done in isolation to work effectively. But I hope that this gives you a sense of empathy towards those who may not have even heard of it.&lt;/p></description></item><item><title>About Me</title><link>https://matt.copperwaite.net/about-me/</link><pubDate>Tue, 08 Mar 2022 09:00:00 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/about-me/</guid><description>&lt;!--alex ignore servant-->
&lt;p>Hi, I&amp;rsquo;m Matt Copperwaite. I was formally employed as a Civil Servant for the United Kingdom Government for more than 10 years. I am currently working in Cyber Security for the Financial Times.&lt;/p>
&lt;p>I started off as a Software Engineer, but got heavily involved in IT infrastructure projects and am now specialising in applying IT security to projects using Agile and DevOps techniques.&lt;/p>
&lt;p>The content of this blog does not necessarily represent the views of my employer.&lt;/p></description></item><item><title>The Maintenance Cost of Security Controls</title><link>https://matt.copperwaite.net/blog/maintenance-cost-of-security-controls/</link><pubDate>Thu, 16 Dec 2021 13:00:32 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/maintenance-cost-of-security-controls/</guid><description>&lt;p>I used to work with a security architect who thought that every risk can be mitigated by use of &amp;ldquo;IP &lt;a href="https://www.ncsc.gov.uk/blog-post/terminology-its-not-black-and-white">white-lists&lt;/a>&amp;rdquo;.&lt;/p>
&lt;p>There are some immediate concerns with that approach in many scenarios. In most cases the poor user experience, and the ease in which it can be over-come. But one of the other concerns, that I often don&amp;rsquo;t see discussed, is the support impact of such a control.&lt;/p>
&lt;p>Firstly let&amp;rsquo;s assume that this is to limit user authentication. The user has to realise the reason that a service has been unavailable for hours, or days, is because their IP has changed. They will then have to find a way to request help through a different path.&lt;/p>
&lt;p>Even with a single user this could be a big over-head, requesting help several times a year. If they were using something like a 4G dongle for their internet connection, which changes IP addresses frequently, they could be requesting help several times a week. That is an extreme example, but multiply that by even a modest number of users and your support teams become overwhelmed. You could create some sort of self-service, but then why have the control at all? All it does is create bureaucracy.&lt;/p>
&lt;p>This post isn&amp;rsquo;t entirely about bashing IP allow-lists, although it demonstrates the issues effectively.&lt;/p>
&lt;p>Another example is using &lt;a href="https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html">AWS&amp;rsquo;s Customer Managed Keys for KMS&lt;/a>. By using CMK you may have mitigated whatever concern you thought you had, but you now have to manage your own encryption keys. You have to create an entire ecosystem for managing those keys, ensure they&amp;rsquo;re protected, rotated, and retired securely. That has the additional effort that you are now not putting in to delivering value to your users, as well as the additional security risk associated with getting every step right.&lt;/p>
&lt;p>Any control proposed to mitigate a risk needs to be adequately weighed up and the impact and implications of that control has its own risks. You have to consider the secondary effects on how to effectively manage that control, and everything that comes with it.&lt;/p>
&lt;!--alex ignore knife fight -->
&lt;p>With IP allow-listing there is an interesting asymmetry between the risk and the control. The control is vastly more impactful than the thing you&amp;rsquo;re trying to protect against. To mix metaphors it&amp;rsquo;s like bringing a barn-door to a knife fight. You have to be careful that each control chosen is measured against the risk, rather than taken at face value.&lt;/p></description></item><item><title>The Not So Sorry State Of Open Source</title><link>https://matt.copperwaite.net/blog/the-not-so-sorry-state-of-open-source/</link><pubDate>Tue, 14 Dec 2021 10:30:32 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/the-not-so-sorry-state-of-open-source/</guid><description>&lt;p>I&amp;rsquo;ve seen recent discussions bemoaning the state of Open Source software. This seems likely to me to have been brought on by questions about their security and integrity in light of recent concerns about supply chain exploits.&lt;/p>
&lt;p>I will declare myself now, I am not a fan of Java. In my personal ranking of programming languages I hate, Java is there right below PHP. I will admit with the log4j issues over the weekend I have been quietly smirking to myself a bit. Although it goes without saying, #hugops to those who have had their weekends ruined.&lt;/p>
&lt;p>However, I do recognise that ranking them comes from my personal biases and is not backed up by any data. It does not &lt;a href="./assessing-security-practices-of-3rd-party-projects">make the Java (or PHP) ecosystem insecure&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;m sure this also applies to those with concerns about the security of Open Source software. Lashing out with whatever their personal biases tell them without any considered reasoning. It makes me think of the SystemD arguments that are still around today.&lt;/p>
&lt;p>Given the broad use and severity of the log4j issues, what does actually concern me is environments that are difficult to update. I do recognise that we are in a time of transition right now. A lot of software is still manually deployed, if the engineers who built it are still working for the company. And even the ones that are automatically deployed may not fully understand the tooling within them. I&amp;rsquo;m sure much like Heartbleed the fixes will be gradual rather than big bang.&lt;/p>
&lt;p>Open Source software, Java, PHP, whatever needs tooling that allows it to be patched quickly, reliably and effectively. I would hypothesize that those who are letting their personal biases lead them to conclusions about whatever technology they hate are actually victims of ineffective tooling.&lt;/p>
&lt;p>Hopefully this will be another opportunity for businesses to have the discussion &amp;ldquo;what can we do to prevent this from happening again?&amp;rdquo; and do some fish-bone analysis rather than listening to the loudest person in the room then being surprised when we run in to the same issues again.&lt;/p></description></item><item><title>Security Communication</title><link>https://matt.copperwaite.net/blog/security-communication/</link><pubDate>Sun, 21 Nov 2021 10:30:32 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/security-communication/</guid><description>&lt;!--alex ignore cancer -->
&lt;p>Lately I&amp;rsquo;ve been listening to the &lt;a href="https://www.bbc.co.uk/programmes/m000l7q1">BBC&amp;rsquo;s How They Made Us Doubt Everything&lt;/a> which exposes how the manufacturing of doubt is used to protect first the tobacco industry and their link to lung cancer, then the oil industry and their link to climate change.&lt;/p>
&lt;p>It&amp;rsquo;s all well worth listening to the whole show if you can get access to it, but one of the episodes that stood out to me was about &lt;a href="https://www.bbc.co.uk/programmes/m000lgk6">climate change communication&lt;/a> and the section with &lt;a href="https://twitter.com/ClimateComms">Susan Hassol&lt;/a> describing the confusing and conflicting words that scientists use. A similar assessment of the poor usage of language used in climate science in &lt;a href="https://youtu.be/V-tEmE85QDE">Susan&amp;rsquo;s TEDx talk&lt;/a>.&lt;/p>
&lt;!--alex ignore actors-actresses -->
&lt;p>How this ties in to IT security is that I think the community has a similar communication problem. I don&amp;rsquo;t see evidence that there are adversarial actors involved, intent on casting doubt on the effectiveness of encryption. We can assume it exists, and we should be thinking about these problems before security has the same communication challenges as climate science.&lt;/p>
&lt;p>MFA, Authentication, Authorisation, backups, privacy. I know what these means to me. I have a hunch about what they might mean to the readers of this post. But what do these terms mean to those outside the industry, my parents, or my neighbours?&lt;/p>
&lt;p>I know when I met my neighbours for the first time I inadvertently got in to a conversation about coding and hacking and had to clarify their meaning. As explained by Hassol, having these communication barriers doesn&amp;rsquo;t help make people understand better, and make information easier to act on.&lt;/p>
&lt;p>Hassol has a published translation of &lt;a href="https://twitter.com/ClimateComms/status/998325439482515456/photo/1">commonly confused terms&lt;/a>. Similarly, Gender Decoder, used to check for gender biases in job adverts is also &lt;a href="https://gender-decoder.katmatfield.com/about">based on published evidence&lt;/a>. Where is that analysis for security terms?&lt;/p>
&lt;p>NCSC does put a lot of effort in to this, and has even &lt;a href="https://www.ncsc.gov.uk/blog-post/the-logic-behind-three-random-words">re-emphasised their tend pragmatic advice&lt;/a> when &lt;a href="https://paul.reviews/passwords-why-using-3-random-words-is-a-really-bad-idea/">questioned by those in the industry&lt;/a> on their three random words policy. But the argument is about as effective as whether oil or coal is the largest contributor to green-house gasses. It creates uncertainty, and ultimately misses the more valuable position of secure passwords.&lt;/p>
&lt;p>I want more IT and cyber security discussed in common forums, such as TV, and Movies. Those in the industry often get excited about seeing &lt;a href="https://nmap.org/movies/">nmap&lt;/a> or &lt;a href="https://youtu.be/nKi-YMfdKrA">multi-factor authentication&lt;/a> used on screen. But it&amp;rsquo;s rare that security advice is &lt;a href="https://youtu.be/rzMwku95lRE">portrayed well&lt;/a>, or &lt;a href="https://youtu.be/N7mjDl2fDtY">in seriousness&lt;/a>.&lt;/p>
&lt;p>I often think, who is, or will be the person to communicate IT security well. Who will have an accessible, entertaining and informative TV show on how to secure your e-mail? Who will educate the public in looking for better privacy serving products? Who will go on news when a major company gets hit by ransomware or has a data leak?&lt;/p>
&lt;p>Who is, or will be, the &lt;a href="https://en.wikipedia.org/wiki/David_Attenborough">David Attenborough&lt;/a> or &lt;a href="https://en.wikipedia.org/wiki/Hannah_Fry">Hannah Fry&lt;/a> of Cyber Security?&lt;/p></description></item><item><title>Green and Brown Teams</title><link>https://matt.copperwaite.net/blog/green-brown-teams/</link><pubDate>Fri, 12 Nov 2021 18:10:32 +0000</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/green-brown-teams/</guid><description>&lt;p>A recent &lt;a href="https://cyberweekly.substack.com/p/cyberweekly-174-one-team-two-team">Cyber Weekly&lt;/a> mentioned Green Teams. This is not a term I had heard before, and from having a quick look around I couldn&amp;rsquo;t see this term widely used at least in the context of service delivery. I wanted to expand on it.&lt;/p>
&lt;p>The name isn&amp;rsquo;t so much a description of what a Green Team do, but a reflection of their responsibilities. By which I mean you cannot become a Green Team, you are working on a product that didn&amp;rsquo;t exist before.&lt;/p>
&lt;p>Thinking on the term a little I also realised that there is a missing group here, and that is the teams working on existing deliveries and in many cases legacy systems. They also need a name. Extending the analogy of &lt;a href="https://en.wikipedia.org/wiki/Greenfield_project">Greenfield&lt;/a> the term used for projects that have some existing infrastructure is often &lt;a href="https://en.wikipedia.org/wiki/Brownfield_(software_development)">Brownfield&lt;/a> so we end up with &lt;em>Brown teams&lt;/em>. Although that name is problematic.&lt;/p>
&lt;p>Whatever the name the categorisation is useful because, as the article points out, we often don&amp;rsquo;t spend significant time thinking about the issues these teams face, and they require different working practices to get them to a good place.&lt;/p></description></item><item><title>Providing Useful Security Advice</title><link>https://matt.copperwaite.net/blog/providing-useful-security-advice/</link><pubDate>Fri, 29 Oct 2021 18:10:32 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/providing-useful-security-advice/</guid><description>&lt;p>I know I certainly dread that message:&lt;/p>
&lt;blockquote>
&lt;p>You have a massive security issues by the way&lt;/p>
&lt;/blockquote>
&lt;p>It instantly puts you on the defensive, and in my experience, it&amp;rsquo;s also not true.&lt;/p>
&lt;p>On top of that the phrasing creates an information asymmetry and puts you in a position you have to defend. You may in reality be in a strong position, but by starting off with a non-collaborative discussion it can be difficult to identify the true problem.&lt;/p>
&lt;p>&lt;a href="./armchair-security-experts">As I mentioned twice in my previous post&lt;/a> security is all about context, and I wanted to expand on that point. You may, in isolation, have something in your environment that isn&amp;rsquo;t ideal. We all do. The alternative is to have no service at all. But IT security is entirely about risks and trade-offs.&lt;/p>
&lt;p>It may well be that you do have an issue here, and it may also be that you have managed it already through another control such as alerts that warn when that scenario happens, but to an outsider it is often difficult to draw the relationship between a risk and a control.&lt;/p>
&lt;p>Let&amp;rsquo;s turn it around. Say you discover an issue in someone else&amp;rsquo;s service and you want to draw their attention to it. What would be the best way to broach that subject? It needs to be collaborative and resolves the issue. This question appears a lot in interviews in this industry, in one form or another, but I&amp;rsquo;ve yet to see a response I&amp;rsquo;m entirely happy with. Let&amp;rsquo;s expand on it then.&lt;/p>
&lt;p>First off, setting the scenario. I&amp;rsquo;m excluding where you are an outsider as bug bounty programmes are &lt;a href="https://en.wikipedia.org/wiki/Bug_bounty_program">well established and documented&lt;/a>.&lt;/p>
&lt;p>In this scenario you are a Security Architect, Engineer or similar in a business. You have access to the source code. You also have access to the person who is responsible for the code, and that you&amp;rsquo;re using modern delivery methodologies.&lt;/p>
&lt;p>As mentioned, the first issue you have is that perhaps the issue you&amp;rsquo;ve found has already been risk managed. To account for this the first step is to check the documentation. There is a chance that the issue you are seeing has been documented but difficult to find. Unless you&amp;rsquo;re somewhere that employs enough people and pays well enough to attract good people it&amp;rsquo;s unlikely this is documented at all, but let&amp;rsquo;s try to minimise wasting someone else&amp;rsquo;s time first. Time they could spend resolving other issues.&lt;/p>
&lt;p>In general terms you&amp;rsquo;re trying to identify if the issue you are seeing is actually an issue and test your assumptions.&lt;/p>
&lt;p>In the more likely scenario that the documentation doesn&amp;rsquo;t exist, hard to find, or have the information you need. Next is to approach the person responsible. I think it&amp;rsquo;s important to coach your wording appropriately. Never make assumptions about the issue you have found. You want to look like you are coming from the position of being wrong or were not able to find the right information. You are now attempting to find the right information. Phrase it something like:&lt;/p>
&lt;blockquote>
&lt;p>I was looking at your code and I&amp;rsquo;m trying to identify if something I&amp;rsquo;m seeing is actually an issue.&lt;/p>
&lt;/blockquote>
&lt;p>Followed by explaining the issue.&lt;/p>
&lt;p>There&amp;rsquo;s no point saying there is a massive security issues because, as mentioned, you put the other person on the defensive, and it may well be that you are wrong. You are reducing your chances that they will pay attention to you in the future, when perhaps there is a genuine issue.&lt;/p>
&lt;p>You may discover at this point that they have identified the issue, mitigated it, and the documentation is good, but not something that can be found quickly. At this point you may want to suggest making it easier to find the documentation and your job is done.&lt;/p>
&lt;p>However, if they have mitigated the issue but they haven&amp;rsquo;t documented well, or they haven&amp;rsquo;t mitigated it at all then you have some work to do.&lt;/p>
&lt;p>This is your opportunity to create some security credit and I recommend you take it. This will make working on issues in future much easier.&lt;/p>
&lt;p>The first step is to offer to raise a ticket for the work. This means that it has a greater chance of the issue being worked on. If you&amp;rsquo;re unfamiliar with the project this is also the point to clarify where they record their issues so you know it&amp;rsquo;s somewhere they will see it.&lt;/p>
&lt;p>Ideally the next step is to be proactive, although it&amp;rsquo;s not always practical.&lt;/p>
&lt;p>If it&amp;rsquo;s a documentation issue then offer to update their documents.&lt;/p>
&lt;p>It also may well be a genuine unmitigated issue, and much the same way with the documentation, if you&amp;rsquo;re comfortable you should then be proactive in fixing the problem. Raising a Pull Request for the change and adding or updating tests.&lt;/p>
&lt;p>That way the team with the issue are more likely to listen to you and fix the problem next time, which is the ultimate goal: reducing the risk of disruption to your system.&lt;/p></description></item><item><title>Armchair Security Experts</title><link>https://matt.copperwaite.net/blog/armchair-security-experts/</link><pubDate>Thu, 28 Oct 2021 10:30:32 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/armchair-security-experts/</guid><description>&lt;p>Providing security advice to someone can be very difficult, particularly when unsolicited. This is because IT security is entirely context based. I use the term &lt;em>Armchair Security Experts&lt;/em> to describe people who provide security advice, often wrong, as if they had expertise in the subject area.&lt;/p>
&lt;p>Wikipedia explains the term Armchair Expert (or &lt;a href="https://en.wikipedia.org/wiki/Armchair_theorizing">Armchair Theorizing&lt;/a>) well enough, and the security aspect is much the same. Someone with limited practical expertise in the field. Or more generously, someone whose responsibilities doesn&amp;rsquo;t include owning any risk.&lt;/p>
&lt;p>Security is all about context. If you make broad bold statements about security without leaving your armchair to consider the context you are providing negative value to a delivery.&lt;/p>
&lt;p>The security advice Armchair Security Experts sometimes provide I call these Security Grenades. This would often be in the middle of a big important meeting and someone semi senior would throw in something like &amp;ldquo;I have heard that S3 is insecure&amp;rdquo;. This is so bafflingly bad information that it de-rails the purpose of the meeting.&lt;/p>
&lt;!--alex ignore dead-->
&lt;p>This is closely related to the &lt;a href="https://en.wikipedia.org/wiki/Dead_cat_strategy">dead cat strategy&lt;/a> (which is more or less as horrible as it sounds) but instead of drawing attention away from a dangerous line of discussion it diverts the delivery team in to trying to handle this knowledge asymmetry.&lt;/p>
&lt;p>This is where in an Agile delivery that taking all stakeholders on the journey with you is so important.&lt;/p>
&lt;p>You need to keep everyone informed and up to date on your progress, your assumptions, and your solutions. You should be able to identify those who have the power to derail your project and put the extra effort in to keeping them informed so that they don&amp;rsquo;t scupper your delivery at the final stages.&lt;/p></description></item><item><title>Behavioural Economics and Second Order Thinking</title><link>https://matt.copperwaite.net/blog/behavioural-economics-second-order-thinking/</link><pubDate>Wed, 27 Oct 2021 18:10:32 +0100</pubDate><author>matt@copperwaite.net (Matt Copperwaite)</author><guid>https://matt.copperwaite.net/blog/behavioural-economics-second-order-thinking/</guid><description>&lt;p>I really enjoyed the &lt;a href="https://fs.blog/2020/03/chestertons-fence/">article on Chesterton&amp;rsquo;s Fence&lt;/a> I came across recently. It really made me reflect on &lt;a href="https://en.wikipedia.org/wiki/Behavioral_economics">Behavioural Economics&lt;/a> again &amp;ndash; as does so much stuff I read.&lt;/p>
&lt;p>The Chesterton&amp;rsquo;s Fence analogy is an excellent description of why challenging assumptions in Agile processes is so important, but the reason I like it is because thinking in a Behavioural Economics way you can use it to inform Second Order Thinking. Or in some ways, start to predict the future about what effects a particular action has.&lt;/p>
&lt;p>In Behavioural Economics terms, the fence can have multiple purposes, but what it incentives is keeping something in or out. By removing that fence is no-longer performs that function and whatever protection it afforded no-longer is true.&lt;/p>
&lt;p>I know in reality however I&amp;rsquo;m sure I would mindlessly be attempting to remove the fence post without thinking about it&amp;rsquo;s purpose. Fortunately because of the repeatability of DevOps practices we can re-enforce that thinking each time.&lt;/p>
&lt;p>I write this however, not so much attempting to be a sooth sayer, but, much like the fence, as a warning that what Second Order Thinking and Behavioural Economics can tell you about the future, is still assumptions based on assumptions, and that you can really only understand what happens next through small fail fast experimentation.&lt;/p>
&lt;p>So perhaps the answer the true analogy isn&amp;rsquo;t about the fence being moved, but instead about making assumptions about the effect of moving it.&lt;/p>
&lt;p>But then there is such a thing as taking an analogy too far.&lt;/p></description></item></channel></rss>